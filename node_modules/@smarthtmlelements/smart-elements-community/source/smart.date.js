
/* Smart HTML Elements v4.6.0 (2019-Oct) 
Copyright (c) 2011-2019 jQWidgets. 
License: https://htmlelements.com/license/ */

const localTimezoneOffset=-1*new Date().getTimezoneOffset(),__timeZones=[{id:"Local",offset:localTimezoneOffset,offsetHours:localTimezoneOffset/60,displayName:"",supportsDaylightSavingTime:!1},{id:"Dateline Standard Time",offset:-720,offsetHours:-12,displayName:"(UTC-12:00) International Date Line West",supportsDaylightSavingTime:!1},{id:"UTC-11",offset:-660,offsetHours:-11,displayName:"(UTC-11:00) Coordinated Universal Time-11",supportsDaylightSavingTime:!1},{id:"Hawaiteratoran Standard Time",offset:-600,offsetHours:-10,displayName:"(UTC-10:00) Hawaiterator",supportsDaylightSavingTime:!1},{id:"Alaskan Standard Time",offset:-540,offsetHours:-9,displayName:"(UTC-09:00) Alaska",supportsDaylightSavingTime:!0},{id:"Pacific Standard Time (Mexico)",offset:-480,offsetHours:-8,displayName:"(UTC-08:00) Baja California",supportsDaylightSavingTime:!0},{id:"Pacific Standard Time",offset:-480,offsetHours:-8,displayName:"(UTC-08:00) Pacific Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"US Mountain Standard Time",offset:-420,offsetHours:-7,displayName:"(UTC-07:00) Arizona",supportsDaylightSavingTime:!1},{id:"Mountain Standard Time (Mexico)",offset:-420,offsetHours:-7,displayName:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",supportsDaylightSavingTime:!0},{id:"Mountain Standard Time",offset:-420,offsetHours:-7,displayName:"(UTC-07:00) Mountain Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"Central Standard Time",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Central Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"Central America Standard Time",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Central America",supportsDaylightSavingTime:!1},{id:"Canada Central Standard Time",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Saskatchewan",supportsDaylightSavingTime:!1},{id:"Central Standard Time (Mexico)",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",supportsDaylightSavingTime:!0},{id:"SA Pacific Standard Time",offset:-300,offsetHours:-5,displayName:"(UTC-05:00) Bogota, Lima, Quito, Rio Branco",supportsDaylightSavingTime:!1},{id:"Eastern Standard Time",offset:-300,offsetHours:-5,displayName:"(UTC-05:00) Eastern Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"US Eastern Standard Time",offset:-300,offsetHours:-5,displayName:"(UTC-05:00) Indiana (East)",supportsDaylightSavingTime:!0},{id:"Venezuela Standard Time",offset:-270,offsetHours:-4.5,displayName:"(UTC-04:30) Caracas",supportsDaylightSavingTime:!1},{id:"Atlantic Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Atlantic Time (Canada)",supportsDaylightSavingTime:!0},{id:"Paraguay Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Asuncion",supportsDaylightSavingTime:!0},{id:"Central Brazilian Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Cuiaba",supportsDaylightSavingTime:!0},{id:"Pacific SA Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Santiago",supportsDaylightSavingTime:!0},{id:"SA Western Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",supportsDaylightSavingTime:!1},{id:"Newfoundland Standard Time",offset:-210,offsetHours:-3.5,displayName:"(UTC-03:30) Newfoundland",supportsDaylightSavingTime:!0},{id:"SA Eastern Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Cayenne, Fortaleza",supportsDaylightSavingTime:!1},{id:"Argentina Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Buenos Aires",supportsDaylightSavingTime:!0},{id:"E. South America Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Brasilia",supportsDaylightSavingTime:!0},{id:"Bahia Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Salvador",supportsDaylightSavingTime:!0},{id:"Montevideo Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Montevideo",supportsDaylightSavingTime:!0},{id:"Greenland Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Greenland",supportsDaylightSavingTime:!0},{id:"UTC-02",offset:-120,offsetHours:-2,displayName:"(UTC-02:00) Coordinated Universal Time-02",supportsDaylightSavingTime:!1},{id:"Mid-Atlantic Standard Time",offset:-120,offsetHours:-2,displayName:"(UTC-02:00) Mid-Atlantic - Old",supportsDaylightSavingTime:!0},{id:"Azores Standard Time",offset:-60,offsetHours:-1,displayName:"(UTC-01:00) Azores",supportsDaylightSavingTime:!0},{id:"Cape Verde Standard Time",offset:-60,offsetHours:-1,displayName:"(UTC-01:00) Cape Verde Is.",supportsDaylightSavingTime:!1},{id:"Morocco Standard Time",offset:0,offsetHours:0,displayName:"(UTC) Casablanca",supportsDaylightSavingTime:!0},{id:"UTC",offset:0,offsetHours:0,displayName:"(UTC) Coordinated Universal Time",supportsDaylightSavingTime:!1},{id:"GMT Standard Time",offset:0,offsetHours:0,displayName:"(UTC) Dublin, Edinburgh, Lisbon, London",supportsDaylightSavingTime:!0},{id:"Greenwich Standard Time",offset:0,offsetHours:0,displayName:"(UTC) Monrovia, Reykjavik",supportsDaylightSavingTime:!1},{id:"Central European Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",supportsDaylightSavingTime:!0},{id:"Namibia Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Windhoek",supportsDaylightSavingTime:!0},{id:"W. Central Africa Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) West Central Africa",supportsDaylightSavingTime:!1},{id:"W. Europe Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",supportsDaylightSavingTime:!0},{id:"Central Europe Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",supportsDaylightSavingTime:!0},{id:"Romance Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",supportsDaylightSavingTime:!0},{id:"FLE Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",supportsDaylightSavingTime:!0},{id:"South Africa Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Harare, Pretoria",supportsDaylightSavingTime:!1},{id:"Turkey Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Istanbul",supportsDaylightSavingTime:!0},{id:"GTB Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Athens, Bucharest",supportsDaylightSavingTime:!0},{id:"Libya Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Tripoli",supportsDaylightSavingTime:!0},{id:"E. Europe Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) E. Europe",supportsDaylightSavingTime:!0},{id:"Jordan Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Amman",supportsDaylightSavingTime:!0},{id:"Middle East Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Beirut",supportsDaylightSavingTime:!0},{id:"Egypt Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Cairo",supportsDaylightSavingTime:!0},{id:"Syria Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Damascus",supportsDaylightSavingTime:!0},{id:"Israel Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Jerusalem",supportsDaylightSavingTime:!0},{id:"Arab Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Kuwait, Riyadh",supportsDaylightSavingTime:!1},{id:"E. Africa Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Nairobi",supportsDaylightSavingTime:!1},{id:"Arabic Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Baghdad",supportsDaylightSavingTime:!0},{id:"Kaliningrad Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Kaliningrad, Minsk",supportsDaylightSavingTime:!0},{id:"Iran Standard Time",offset:210,offsetHours:3.5,displayName:"(UTC+03:30) Tehran",supportsDaylightSavingTime:!0},{id:"Mauritius Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Port Louis",supportsDaylightSavingTime:!0},{id:"Georgian Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Tbilisi",supportsDaylightSavingTime:!1},{id:"Caucasus Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Yerevan",supportsDaylightSavingTime:!0},{id:"Arabian Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Abu Dhabi, Muscat",supportsDaylightSavingTime:!1},{id:"Azerbaijan Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Baku",supportsDaylightSavingTime:!0},{id:"Russian Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Moscow, St. Petersburg, Volgograd",supportsDaylightSavingTime:!0},{id:"Afghanistan Standard Time",offset:270,offsetHours:4.5,displayName:"(UTC+04:30) Kabul",supportsDaylightSavingTime:!1},{id:"Pakistan Standard Time",offset:300,offsetHours:5,displayName:"(UTC+05:00) Islamabad, Karachi",supportsDaylightSavingTime:!0},{id:"West Asia Standard Time",offset:300,offsetHours:5,displayName:"(UTC+05:00) Ashgabat, Tashkent",supportsDaylightSavingTime:!1},{id:"India Standard Time",offset:330,offsetHours:5.5,displayName:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",supportsDaylightSavingTime:!1},{id:"Sri Lanka Standard Time",offset:330,offsetHours:5.5,displayName:"(UTC+05:30) Sri Jayawardenepura",supportsDaylightSavingTime:!1},{id:"Nepal Standard Time",offset:345,offsetHours:5.75,displayName:"(UTC+05:45) Kathmandu",supportsDaylightSavingTime:!1},{id:"Central Asia Standard Time",offset:360,offsetHours:6,displayName:"(UTC+06:00) Astana",supportsDaylightSavingTime:!1},{id:"Bangladesh Standard Time",offset:360,offsetHours:6,displayName:"(UTC+06:00) Dhaka",supportsDaylightSavingTime:!0},{id:"Ekaterinburg Standard Time",offset:360,offsetHours:6,displayName:"(UTC+06:00) Ekaterinburg",supportsDaylightSavingTime:!0},{id:"Myanmar Standard Time",offset:390,offsetHours:6.5,displayName:"(UTC+06:30) Yangon (Rangoon)",supportsDaylightSavingTime:!1},{id:"SE Asia Standard Time",offset:420,offsetHours:7,displayName:"(UTC+07:00) Bangkok, Hanoi, Jakarta",supportsDaylightSavingTime:!1},{id:"N. Central Asia Standard Time",offset:420,offsetHours:7,displayName:"(UTC+07:00) Novosibirsk",supportsDaylightSavingTime:!0},{id:"Ulaanbaatar Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Ulaanbaatar",supportsDaylightSavingTime:!1},{id:"China Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",supportsDaylightSavingTime:!1},{id:"Singapore Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Kuala Lumpur, Singapore",supportsDaylightSavingTime:!1},{id:"North Asia Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Krasnoyarsk",supportsDaylightSavingTime:!0},{id:"Taipei Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Taipei",supportsDaylightSavingTime:!1},{id:"W. Australia Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Perth",supportsDaylightSavingTime:!0},{id:"Korea Standard Time",offset:540,offsetHours:9,displayName:"(UTC+09:00) Seoul",supportsDaylightSavingTime:!1},{id:"North Asia East Standard Time",offset:540,offsetHours:9,displayName:"(UTC+09:00) Irkutsk",supportsDaylightSavingTime:!0},{id:"Tokyo Standard Time",offset:540,offsetHours:9,displayName:"(UTC+09:00) Osaka, Sapporo, Tokyo",supportsDaylightSavingTime:!1},{id:"AUS Central Standard Time",offset:570,offsetHours:9.5,displayName:"(UTC+09:30) Darwin",supportsDaylightSavingTime:!1},{id:"Cen. Australia Standard Time",offset:570,offsetHours:9.5,displayName:"(UTC+09:30) Adelaide",supportsDaylightSavingTime:!0},{id:"West Pacific Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Guam, Port Moresby",supportsDaylightSavingTime:!1},{id:"Tasmania Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Hobart",supportsDaylightSavingTime:!0},{id:"E. Australia Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Brisbane",supportsDaylightSavingTime:!1},{id:"AUS Eastern Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Canberra, Melbourne, Sydney",supportsDaylightSavingTime:!0},{id:"Yakutsk Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Yakutsk",supportsDaylightSavingTime:!0},{id:"Vladivostok Standard Time",offset:660,offsetHours:11,displayName:"(UTC+11:00) Vladivostok",supportsDaylightSavingTime:!0},{id:"Central Pacific Standard Time",offset:660,offsetHours:11,displayName:"(UTC+11:00) Solomon Is., New Caledonia",supportsDaylightSavingTime:!1},{id:"Magadan Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Magadan",supportsDaylightSavingTime:!0},{id:"Kamchatka Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",supportsDaylightSavingTime:!0},{id:"Fiji Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Fiji",supportsDaylightSavingTime:!0},{id:"New Zealand Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Auckland, Wellington",supportsDaylightSavingTime:!0},{id:"UTC+12",offset:720,offsetHours:12,displayName:"(UTC+12:00) Coordinated Universal Time+12",supportsDaylightSavingTime:!1},{id:"Tonga Standard Time",offset:780,offsetHours:13,displayName:"(UTC+13:00) Nuku'alofa",supportsDaylightSavingTime:!1},{id:"Samoa Standard Time",offset:780,offsetHours:13,displayName:"(UTC+13:00) Samoa",supportsDaylightSavingTime:!0}],__daysToMonth365=[0,31,59,90,120,151,181,212,243,273,304,334,365],__daysToMonth366=[0,31,60,91,121,152,182,213,244,274,305,335,366],__daysPer4Years=1461,__daysPer100Years=36524,__daysPer400Years=146097,__daysTo1601=584388,__daysTo1899=693593,__daysTo10000=3652059,__minTicks=0,__maxTicks=3155378976000000000,__maxMillis=315537897600000;Smart.Utilities.Assign("TimeSpan",class{constructor(){const e=this;if(e.ticksPerMillisecond=1e4,e.millisecondsPerTick=1/1e4,e.ticksPerSecond=10000000,e.secondsPerTick=1/10000000,e.ticksPerMinute=600000000,e.minutesPerTick=1/600000000,e.ticksPerHour=36000000000,e.hoursPerTick=1/36000000000,e.ticksPerDay=864000000000,e.daysPerTick=1/864000000000,e.millisPerSecond=1e3,e.millisPerMinute=60000,e.millisPerHour=3600000,e.millisPerDay=86400000,e._ticks=0,1===arguments.length){if(isNaN(arguments[0]))throw new Error("Argument must be a number.");e._ticks=arguments[0]}else if(3===arguments.length)e._ticks=e.timeToMS(arguments[0],arguments[1],arguments[2],0);else if(4===arguments.length){const a=arguments[0],t=arguments[1],i=arguments[2],s=arguments[3];e._ticks=(1e3*(24*(3600*a)+3600*t+60*i+s)+0)*e.ticksPerMillisecond}else if(5===arguments.length){const a=arguments[0],t=arguments[1],i=arguments[2],s=arguments[3],o=arguments[4];e._ticks=(1e3*(24*(3600*a)+3600*t+60*i+s)+o)*e.ticksPerMillisecond}}ticks(){return this._ticks}days(){const e=this;return parseInt(e._ticks/e.ticksPerDay)}timeToMS(e,a,t,i){return parseInt((3600*e+60*a+t+i/1e3)*this.ticksPerSecond)}hours(){const e=this;return parseInt(e._ticks/e.ticksPerHour)%24}milliseconds(){const e=this;return parseInt(e._ticks/e.ticksPerMillisecond)%1e3}minutes(){const e=this;return parseInt(e._ticks/e.ticksPerMinute)%60}seconds(){const e=this;return parseInt(e._ticks/e.ticksPerSecond)%60}totalDays(){const e=this;return parseInt(e._ticks*e.daysPerTick)}totalHours(){const e=this;return parseInt(e._ticks*e.hoursPerTick)}totalMilliseconds(){const e=this,a=e._ticks*e.millisecondsPerTick;return parseInt(a)}totalMinutes(){const e=this;return parseInt(e._ticks*e.minutesPerTick)}totalSeconds(){const e=this;return parseInt(e._ticks*e.secondsPerTick)}add(e){const a=this._ticks+e._ticks,t=new Smart.Utilities.TimeSpan(a);return t}subtract(e){const a=this._ticks-e._ticks;return new Smart.Utilities.TimeSpan(a)}duration(){const e=this;return 0<=e._ticks?new Smart.Utilities.TimeSpan(e._ticks):new Smart.Utilities.TimeSpan(-e._ticks)}equals(e){return this._ticks===e._ticks}valueOf(){return this._ticks}compare(e,a){return e._ticks>a._ticks?1:e._ticks<a._ticks?-1:0}interval(e,a){const t=e*a+(0<=e?.5:-.5);return new Smart.Utilities.TimeSpan(t*this.ticksPerMillisecond)}fromDays(e){const a=this;return a.interval(e,a.millisPerDay)}fromHours(e){const a=this;return a.interval(e,a.millisPerHour)}fromMilliseconds(e){return this.interval(e,1)}fromMinutes(e){const a=this;return a.interval(e,a.millisPerMinute)}fromSeconds(e){const a=this;return a.interval(e,a.millisPerSecond)}fromTicks(e){return new Smart.Utilities.TimeSpan(e)}toString(){return this.totalMilliseconds().toString()}negate(){return new Smart.Utilities.TimeSpan(-this._ticks)}}),Smart.Utilities.Assign("DateTime",class{constructor(){function e(e){const i=a.regexISOString.exec(e);t=new Smart.Utilities.DateTime(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]),parseFloat(i[4]),parseFloat(i[5]),parseFloat(i[6]),parseFloat(i[7]),0,0,0,0,0,0,0,"UTC")}const a=this;let t;if(a.ticksPerMillisecond=1e4,a.millisecondsPerTick=1/1e4,a.ticksPerSecond=10000000,a.secondsPerTick=1/10000000,a.ticksPerMinute=600000000,a.minutesPerTick=1/600000000,a.ticksPerHour=36000000000,a.hoursPerTick=1/36000000000,a.ticksPerDay=864000000000,a.daysPerTick=1/864000000000,a.millisPerSecond=1e3,a.millisPerMinute=60000,a.millisPerHour=3600000,a.millisPerDay=86400000,a.daysPerYear=365,a.daysPer4Years=__daysPer4Years,a.daysPer100Years=__daysPer100Years,a.daysPer400Years=__daysPer400Years,a.daysTo1601=__daysTo1601,a.daysTo1899=__daysTo1899,a.daysTo10000=__daysTo10000,a.minTicks=0,a.maxTicks=__maxTicks,a.maxMillis=__maxMillis,a.datePartYear=0,a.datePartDayOfYear=1,a.datePartMonth=2,a.datePartDay=3,a.daysToMonth365=__daysToMonth365,a.daysToMonth366=__daysToMonth366,a.minValue=new Date(0),a.maxValue=new Date(3155378976000000000),a.ticksMask=0x3FFFFFFFFFFFFFFF,a.flagsMask=0xC000000000000000,a.localMask=0x8000000000000000,a.ticksCeiling=0x4000000000000000,a.kindUnspecified=0,a.kindUtc=0x4000000000000000,a.kindLocal=0x8000000000000000,a.kindLocalAmbiguousDst=0xC000000000000000,a.kindShift=62,a.regexTrim=/^\s+|\s+$/g,a.regexInfinity=/^[+-]?infinity$/i,a.regexHex=/^0x[a-f0-9]+$/i,a.regexParseFloat=/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/,a.regexISOString=/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/,a.calendar={"/":"/",":":":",firstDay:0,days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December",""],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""]},AM:["AM","am","AM"],PM:["PM","pm","PM"],eras:[{name:"A.D.",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy'-'MM'-'dd'T'HH':'mm':'ss",ISO:"yyyy-MM-dd hh:mm:ss",ISO2:"yyyy-MM-dd HH:mm:ss",d1:"dd.MM.yyyy",d2:"dd-MM-yyyy",zone1:"yyyy-MM-ddTHH:mm:ss-HH:mm",zone2:"yyyy-MM-ddTHH:mm:ss+HH:mm",custom:"yyyy-MM-ddTHH:mm:ss.fff",custom2:"yyyy-MM-dd HH:mm:ss.fff",FP:"yyyy-MM-dd HH:mm:ss:fff:uu:nn:pp:ee:aa:xx:oo",FPA:"yyyy/MM/dd HH:mm:ss:fffuunnppeeaaxxoo",FPA2:"yyyy-MM-dd HH:mm:ss:fffuunnppeeaaxxoo",FT:"HH:mm:ss:fff:uu:nn:pp:ee:aa:xx:oo",PP:"yyyy-MM-dd HH:mm:ss:fff:uu:nn:pp",PT:"HH:mm:ss:fff:uu:nn:pp"},percentsymbol:"%",currencysymbol:"$",currencysymbolposition:"before",decimalseparator:".",thousandsseparator:","},a.dateData=0,a.timeZone=null,a.timeZones=__timeZones,a._codeToUnit={u:"_microsecond",uu:"_microsecond",n:"_nanosecond",nn:"_nanosecond",p:"_picosecond",pp:"_picosecond",e:"_femtosecond",ee:"_femtosecond",a:"_attosecond",aa:"_attosecond",x:"_zeptosecond",xx:"_zeptosecond",o:"_yoctosecond",oo:"_yoctosecond"},a._smallUnits=["_microsecond","_nanosecond","_picosecond","_femtosecond","_attosecond","_zeptosecond","_yoctosecond"],a._microsecond=0,a._nanosecond=0,a._picosecond=0,a._femtosecond=0,a._attosecond=0,a._zeptosecond=0,a._yoctosecond=0,0===arguments.length){const e=new Date;a.dateData=a.dateToMS(e.getFullYear(),e.getMonth()+1,e.getDate())+a.timeToMS(e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds())}else if(1===arguments.length){void 0===arguments[0]&&(arguments[0]="todayDate");const t="number"==typeof arguments[0]&&isFinite(arguments[0]);if(!t&&"string"==typeof arguments[0]){let t;"today"===arguments[0]?t=new Date:"todayDate"===arguments[0]?(t=new Date,t.setHours(0,0,0,0)):a.regexISOString.test(arguments[0])?e(arguments[0]):t=a.tryparseDate(arguments[0]),t&&(a.dateData=a.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+a.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()))}else if("number"==typeof arguments[0])a.dateData=arguments[0];else if(arguments[0]instanceof Date){const e=arguments[0];a.dateData=a.dateToMS(e.getFullYear(),e.getMonth()+1,e.getDate())+a.timeToMS(e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds())}else a.dateData=arguments[0]}else if(2===arguments.length){void 0===arguments[0]&&(arguments[0]="todayDate");const t="number"==typeof arguments[0]&&isFinite(arguments[0]);if(!t&&"string"==typeof arguments[0]){let t;"today"===arguments[0]?t=new Date:"todayDate"===arguments[0]?(t=new Date,t.setHours(0,0,0,0)):a.regexISOString.test(arguments[0])?e(arguments[0]):t=a.tryparseDate(arguments[0]),t&&(a.dateData=a.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+a.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()))}else if("number"==typeof arguments[0])a.dateData=arguments[0];else if(arguments[0]instanceof Date){const e=arguments[0];a.dateData=a.dateToMS(e.getFullYear(),e.getMonth()+1,e.getDate())+a.timeToMS(e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds())}else a.dateData=arguments[0];a.validateTimeZone(arguments[1])}else if(2<arguments.length)if("string"==typeof arguments[0]){const e=a.tryparseDate(arguments[0],arguments[2],arguments[1]);a.dateData=a.dateToMS(e.getFullYear(),e.getMonth()+1,e.getDate())+a.timeToMS(e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds())}else{const e=arguments[0],t=arguments[1]-1,i=arguments[2],s=arguments[3]||0,o=arguments[4]||0,d=arguments[5]||0,n=arguments[6]||0,r=arguments[7]||0,m=arguments[8]||0,f=arguments[9]||0,l=arguments[10]||0,p=arguments[11]||0,y=arguments[12]||0,u=arguments[13]||0,g=new Date(e,t,i,s,o,d,n);1970>e&&g.setFullYear(e),a.dateData=a.dateToMS(g.getFullYear(),g.getMonth()+1,g.getDate())+a.timeToMS(g.getHours(),g.getMinutes(),g.getSeconds(),g.getMilliseconds()),a._microsecond=r,a._nanosecond=m,a._picosecond=f,a._femtosecond=l,a._attosecond=p,a._zeptosecond=y,a._yoctosecond=u,arguments[14]&&a.validateTimeZone(arguments[14])}if(a.timeZone||a.validateTimeZone("Local"),t){const e=t.toTimeZone(a.timeZone);a.dateData=e.dateData}}static validateDate(e,a,t){if(e instanceof Smart.Utilities.DateTime)return e;if(e instanceof Date)return new Smart.Utilities.DateTime(e);try{if(new RegExp(/^\d{1,2}\/\d{1,2}\/\d{4}(, \d{1,2}:\d{2}:\d{1,2} [A|P]M)?$/).test(e)){const a=new Date(e);if(!isNaN(a.getTime()))return new Smart.Utilities.DateTime(a)}if("string"==typeof e)return this.parseDateString(e,a,t);if("number"==typeof e)return new Smart.Utilities.DateTime(new Date(e))}catch(e){}return a}static parseDateString(e,a,t){const i=new Date(e);if(!isNaN(i.getTime()))return new Smart.Utilities.DateTime(i);const s=e.indexOf("Date("),o=e.indexOf("DateTime("),d=e.lastIndexOf(")");let n=e;if((-1!==s||-1!==o)&&-1!==d){if(n=-1===s?e.slice(o+9,d):e.slice(s+5,d),n=n.replace(/'/g,"").replace(/"/g,"").replace(/^\s+|\s+$|\s+(?=\s)/g,""),""===n.trim())return new Smart.Utilities.DateTime;if(new RegExp(/(^(\d+)(\s*,\s*\d+)+(\s*,\s*[a-zA-Z ]+)?$)/g).test(n))return n=n.split(","),n.map(function(e,a){n[a]=isNaN(n[a])?e.trim():parseInt(e)}),-1!==s&&n[1]++,n.unshift(null),n=new(Function.prototype.bind.apply(Smart.Utilities.DateTime,n)),n}else{const a=new Smart.Utilities.DateTime,i=a.parseDate(e,t);if(i)return n=new Smart.Utilities.DateTime(i),a.copySmallTimePartValues(n),n}if(""===n.trim())return a;if(!isNaN(n))return n=new Date(parseInt(n,10)),new Smart.Utilities.DateTime(n);try{const e=n.split(",");2===e.length?(e[1]=e[1].trim(),e.unshift(null),n=new(Function.prototype.bind.apply(Smart.Utilities.DateTime,e))):n=new Smart.Utilities.DateTime(n)}catch(e){n=a}return n}static fromFullTimeStamp(e){e=e.toString();const a=new Smart.Utilities.DateTime(parseFloat(e.slice(0,e.length-21)));for(let t=e.slice(e.length-21),i=0;0<t.length;)a[a._smallUnits[i]]=parseInt(t.slice(0,3),10),t=t.slice(3),i++;return a}static getConstructorParameters(e){return[e.year(),e.month(),e.day(),e.hour(),e.minute(),e.second(),e.millisecond(),e._microsecond,e._nanosecond,e._picosecond,e._femtosecond,e._attosecond,e._zeptosecond,e._yoctosecond,e.timeZone]}static detectDisplayMode(e,a,t){if(e.calendar.patterns[a])return-1===["d","D","M","Y","d1","d2"].indexOf(a)?-1===["t","T","FT","PT"].indexOf(a)?"default":"timePicker":"calendar";const s=["d","M","y"],o=["h","H","m","s","t","f","u","n","p","e","a","x","o"],d=t.groups;let n=!1,r=!1;for(let m=0;m<d.length;m++){const e=d[m].charAt(0);if(-1===s.indexOf(e)?-1!==o.indexOf(e)&&(r=!0):n=!0,n&&r)break}return n==r?"default":n?"calendar":"timePicker"}static getLocalizedNames(e){const a={names:[],namesAbbr:[],namesShort:[]},t={names:[],namesAbbr:[]};if(this[e])return this[e];for(let t=23;30>t;t++){const i=new Date(2017,6,t),s=i.toLocaleString(e,{weekday:"long"});a.names.push(s),a.namesAbbr.push(i.toLocaleString(e,{weekday:"short"})),a.namesShort.push(s.substring(0,2))}for(let a=0;12>a;a++){const i=new Date(2017,a,1),s=i.toLocaleString(e,{month:"long"});t.names.push(s),t.namesAbbr.push(s.substring(0,3))}return t.names.push(""),t.namesAbbr.push(""),this[e]={days:a,months:t},this[e]}internalMS(){return this.dateData}getDatePart(e){const a=this,t=a.internalMS();let i=parseInt(t/a.millisPerDay);const s=parseInt(i/a.daysPer400Years);i-=s*a.daysPer400Years;let o=parseInt(i/a.daysPer100Years);4===o&&(o=3),i-=o*a.daysPer100Years;const d=parseInt(i/a.daysPer4Years);i-=d*a.daysPer4Years;let r=parseInt(i/a.daysPerYear);if(4===r&&(r=3),e===a.datePartYear)return parseInt(400*s+100*o+4*d+r+1);if(i-=r*a.daysPerYear,e===a.datePartDayOfYear)return parseInt(i+1);const f=3===r&&(24!==d||3===o),l=f?a.daysToMonth366:a.daysToMonth365;let p=i>>6;for(;i>=l[p];)p++;return e===a.datePartMonth?parseInt(p):parseInt(i-l[p-1]+1)}dayOfWeek(){const e=this,a=e.dateData,t=parseInt(a/e.millisPerDay+1)%7;return t}dayOfYear(){const e=this;return e.getDatePart(e.datePartDayOfYear)}weekOfYear(e){var a=Math.floor;const t=this,i=t.toDate(),s=e||t.calendar.firstDay,o=new Date(i.getFullYear(),0,1),d=a((i.getTime()-o.getTime()-6e4*(i.getTimezoneOffset()-o.getTimezoneOffset()))/864e5)+1;let n=o.getDay()-s;n=0<=n?n:n+7;let r;if(!(4>n))r=a((d+n-1)/7);else if(r=a((d+n-1)/7)+1,52<r){const e=new Date(i.getFullYear()+1,0,1);let a=e.getDay()-s;a=0<=a?a:a+7,r=4>a?1:53}return r}subtract(e){const a=this;return new Smart.Utilities.TimeSpan(a.dateData*a.ticksPerMillisecond-e.dateData*a.ticksPerMillisecond)}dateToMS(e,a,t){const i=this;if(1<=e&&9999>=e&&1<=a&&12>=a){e=parseInt(e);const s=i.isLeapYear(e)?i.daysToMonth366:i.daysToMonth365;if(1<=t&&t<=s[a]-s[a-1]){const o=e-1,d=365*o+parseInt(o/4)-parseInt(o/100)+parseInt(o/400)+s[a-1]+t-1;return d*i.millisPerDay}}}isLeapYear(e){if(1>e||9999<e)throw new Error("Year out of Range");return 0==e%4&&(0!=e%100||0==e%400)}timeToMS(e,a,t,i){const s=this;if(0<=e&&24>e&&0<=a&&60>a&&0<=t&&60>t){const o=parseInt(3600*e+60*a+t);return 0<i&&1e3>i?o*s.millisPerSecond+i:o*s.millisPerSecond}}daysInMonth(e,a){if(1>a||12<a)throw new Error("Month out of Range");const t=this,i=t.isLeapYear(e)?t.daysToMonth366:t.daysToMonth365;return i[a]-i[a-1]}arrayIndexOf(e,a){return e.indexOf(a)}startsWith(e,a){return 0===e.indexOf(a)}endsWith(e,a){return e.substr(e.length-a.length)===a}trim(e){return(e+"").replace(this.regexTrim,"")}expandFormat(e,a){a=a||"F";let t,i=e.patterns,s=a.length;if(i[a])return i[a];if(1===s){if(t=i[a],!t)throw"Invalid date format string '"+a+"'.";a=t}else 2===s&&"%"===a.charAt(0)&&(a=a.charAt(1));return a}getEra(e,a){if(!a)return 0;if("string"==typeof e)return 0;let t,s=e.getTime();for(let o=0,i=a.length;o<i;o++)if(t=a[o].start,null===t||s>=t)return o;return 0}toUpper(e){return e.split("\xA0").join(" ").toUpperCase()}toUpperArray(e){const a=[];for(let t=0,i=e.length;t<i;t++)a[t]=this.toUpper(e[t]);return a}getEraYear(e,a,t,i){let s=e.getFullYear();return!i&&a.eras&&(s-=a.eras[t].offset),s}getDayIndex(e,a,t){const i=this,s=e.days;let o,d=e._upperDays;return d||(e._upperDays=d=[i.toUpperArray(s.names),i.toUpperArray(s.namesAbbr),i.toUpperArray(s.namesShort)]),a=a.toUpperCase(),t?(o=i.arrayIndexOf(d[1],a),-1===o&&(o=i.arrayIndexOf(d[2],a))):o=i.arrayIndexOf(d[0],a),o}getMonthIndex(e,a,t){const s=this;let o=e.months,d=e.monthsGenitive||e.months,n=e._upperMonths,r=e._upperMonthsGen;n||(e._upperMonths=n=[s.toUpperArray(o.names),s.toUpperArray(o.namesAbbr)],e._upperMonthsGen=r=[s.toUpperArray(d.names),s.toUpperArray(d.namesAbbr)]),a=s.toUpper(a);let m=s.arrayIndexOf(t?n[1]:n[0],a);return 0>m&&(m=s.arrayIndexOf(t?r[1]:r[0],a)),m}appendPreOrPostMatch(e,a){let t=0,i=!1;for(let s=0,o=e.length;s<o;s++){const o=e.charAt(s);switch(o){case"'":i?a.push("'"):t++,i=!1;break;case"\\":i&&a.push("\\"),i=!i;break;default:a.push(o),i=!1;}}return t}getTokenRegExp(){return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyyy|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|uu|u|nn|n|pp|p|ee|e|aa|a|xx|x|oo|o|i{1,24}|zzz|zz|z|gg|g/g}tryparseDate(e,a,t){const s=this;if((void 0===a||null===a)&&(a=s.calendar),void 0!==t){if(Array.isArray(t))for(let o=0;o<t.length;o++){const i=s.parseDate(e,t[o],a);if(i)return i}const i=s.parseDate(e,t,a);if(i)return i}if(""===e)return null;if(null===e||void 0===e||e.substring||(e=e.toString()),null!==e&&void 0!==e&&"/Date("===e.substring(0,6)){const a=/^\/Date\((-?\d+)(\+|-)?(\d+)?\)\/$/;let t=new Date(+e.replace(/\/Date\((\d+)\)\//,"$1"));if("Invalid Date"===t){const a=e.match(/^\/Date\((\d+)([-+]\d\d)(\d\d)\)\/$/);t=null,a&&(t=new Date(1*a[1]+36e5*a[2]+6e4*a[3]))}if(null===t||void 0===t||"Invalid Date"===t||isNaN(t)){const t=a.exec(e);if(t){const e=new Date(parseInt(t[1]));if(t[2]){let a=parseInt(t[3]);"-"===t[2]&&(a=-a);const i=e.getUTCMinutes();e.setUTCMinutes(i-a)}if(!isNaN(e.valueOf()))return e}}return t}const i={smartdate:"yyyy-MM-dd HH:mm:ss",d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy'-'MM'-'dd'T'HH':'mm':'ss",ISO:"yyyy-MM-dd hh:mm:ss",ISO2:"yyyy-MM-dd HH:mm:ss",ISO8601:"yyyy-MM-ddTHH:mm:ss.sssZ",d1:"dd.MM.yyyy",d2:"dd-MM-yyyy",d3:"MM-dd-yyyy",d4:"MM.dd.yyyy",zone1:"yyyy-MM-ddTHH:mm:ss-HH:mm",zone2:"yyyy-MM-ddTHH:mm:ss+HH:mm",custom:"yyyy-MM-ddTHH:mm:ss.fff",custom2:"yyyy-MM-dd HH:mm:ss.fff",iso:"yyyy-MM-ddTHH:mm:ssZ",iso_date1:"yyyy-MM-dd",iso_date2:"yyyy-MM-dd",iso_date3:"yyyy-ddd",iso_date4:"yyyy-MM-dd HH:mm",iso_date5:"yyyy-MM-dd HH:mm Z",iso_date6:"yyyy-MMM-dd",iso_date7:"yyyy-MM",iso_date8:"yyyy-MMM",iso_date9:"yyyy-MMMM",iso_date10:"yyyy-MMMM-dd",iso_time1:"HH:mm:ss.tttt",iso_time2:"HH:mm:ss",iso_time3:"HH:mm",iso_time4:"HH",iso_time5:"yyyyyy-MM-dd",iso_time6:"yyyyyy-MM-dd"};for(let o in i){const t=s.parseDate(e,i[o],a);if(t)return t}const o=a.patterns;for(let i in o){const t=s.parseDate(e,o[i],a);if(t){if("ISO"==i){const t=s.parseDate(e,o.ISO2,a);if(t)return t}return t}}let d;if("string"==typeof e){e=s.trim(e);const t=[":","/","-"," ",","];e=function(e,a,t){return t.replace(new RegExp(e,"g"),a)}(", ",",",e);let i="",o=e;0<=e.indexOf(":")?(i=e.substring(e.indexOf(":")-2),i=s.trim(i),o=e.substring(0,e.indexOf(":")-2)):0<=e.toUpperCase().indexOf("AM")?(i=e.substring(e.toUpperCase().indexOf("AM")-2),i=s.trim(i),o=e.substring(0,e.toUpperCase().indexOf("AM")-2)):0<=e.toUpperCase().indexOf("PM")&&(i=e.substring(e.toUpperCase().indexOf("PM")-2),i=s.trim(i),o=e.substring(0,e.toUpperCase().indexOf("PM")-2));let n=new Date,r=!1;if(o){for(let e=0;e<t.length;e++)if(0<=o.indexOf(t[e])){d=o.split(t[e]);break}let e=[],f=[],l=[],m=null,p=null;for(let t=0;t<d.length;t++){const i=d[t],o=s.parseDate(i,"d",a)||s.parseDate(i,"dd",a)||s.parseDate(i,"ddd",a)||s.parseDate(i,"dddd",a);if(o&&(e.push(o.getDate()),2<i.length)){m=t;break}}for(let e=0;e<d.length;e++){const t=d[e],i=s.parseDate(t,"M",a)||s.parseDate(t,"MM",a)||s.parseDate(t,"MMM",a)||s.parseDate(t,"MMMM",a);if(i){if(null!==m&&void 0!==m&&m===e)continue;if(f.push(i.getMonth()),2<t.length){p=e;break}}}for(let e=0;e<d.length;e++){const t=d[e],i=s.parseDate(t,"yyyy",a);if(i){if(null!==m&&void 0!==m&&m===e)continue;if(null!==p&&void 0!==p&&p===e)continue;l.push(i.getFullYear())}}const i=[];for(let a=e.length-1;0<=a;a--)for(let t=0;t<f.length;t++)for(let s=0;s<l.length;s++){const o=new Date(l[s],f[t],e[a]);1970>l[s]&&o.setFullYear(l[s]),isNaN(o.getTime())||i.push(o)}0<i.length&&(n=i[0],r=!0)}if(i){const e=0<=i.indexOf(":")?i.split(":"):i,t=s.parseDate(i,"h:mm tt",a)||s.parseDate(i,"HH:mm:ss.fff",a)||s.parseDate(i,"HH:mm:ss.ff",a)||s.parseDate(i,"h:mm:ss tt",a)||s.parseDate(i,"HH:mm:ss.tttt",a)||s.parseDate(i,"HH:mm:ss",a)||s.parseDate(i,"HH:mm",a)||s.parseDate(i,"HH",a);let o=0,d=0,m=0,f=0;t&&!isNaN(t.getTime())?(o=t.getHours(),d=t.getMinutes(),m=t.getSeconds(),f=t.getMilliseconds()):(1===e.length&&(o=parseInt(e[0])),2===e.length&&(o=parseInt(e[0]),d=parseInt(e[1])),3===e.length&&(o=parseInt(e[0]),d=parseInt(e[1]),0<=e[2].indexOf(".")?(m=parseInt(e[2].toString().split(".")[0]),f=parseInt(e[2].toString().split(".")[1])):m=parseInt(e[2])),4===e.length&&(o=parseInt(e[0]),d=parseInt(e[1]),m=parseInt(e[2]),f=parseInt(e[3]))),!n||isNaN(o)||isNaN(d)||isNaN(m)||isNaN(f)||(n.setHours(o,d,m,f),r=!0)}if(r)return n}if(null!==e&&void 0!==e){d=[":","/","-"];let a=!0;for(let t=0;t<d.length;t++)-1!==e.indexOf(d[t])&&(a=!1);if(a){const a=new Number(e);if(!isNaN(a))return new Date(a)}}return null}getParseRegExp(e,a){const t=this;let i=e._parseRegExp;if(!i)e._parseRegExp=i={};else{const e=i[a];if(e)return e}let s,o=t.expandFormat(e,a).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g,"\\\\$1"),d=["^"],n=[],r=0,f=0,l=t.getTokenRegExp();for(;null!==(s=l.exec(o));){const e=o.slice(r,s.index);if(r=l.lastIndex,f+=t.appendPreOrPostMatch(e,d),f%2){d.push(s[0]);continue}let a,i=s[0],m=i.length;switch(i){case"dddd":case"ddd":case"MMMM":case"MMM":case"gg":case"g":a="(\\D+)";break;case"tt":case"t":a="(\\D*)";break;case"yyyyy":a="(\\d{1,4})";break;case"yyyy":a="(\\d{"+m+"})";break;case"fff":case"ff":case"f":a="(\\d{1,"+m+"})";break;case"dd":case"d":case"MM":case"M":case"yy":case"y":case"HH":case"H":case"hh":case"h":case"mm":case"m":case"ss":case"s":a="(\\d\\d?)";break;case"uu":case"nn":case"pp":case"ee":case"aa":case"xx":case"oo":a="(\\d{1,3})";break;case"zzz":a="([+-]?\\d\\d?:\\d{2})";break;case"zz":case"z":a="([+-]?\\d\\d?)";break;case"/":a="/";break;default:if(/i{1,24}/.test(i))a="(\\d{"+i.length+"})";else throw"Invalid date format pattern '"+i+"'.";}(a&&d.push(a),"/"!==i)&&n.push(s[0])}t.appendPreOrPostMatch(o.slice(r),d),d.push("$");const m=d.join("").replace(/\s+/g,"\\s+");return i[a]={regExp:m,groups:n}}outOfRange(e,a,t){return e<a||e>t}expandYear(e,a){const t=this,i=new Date,s=t.getEra(i);if(100>a){let o=e.twoDigitYearMax;o="string"==typeof o?new Date().getFullYear()%100+parseInt(o,10):o;const d=t.getEraYear(i,e,s);a+=d-d%100,a>o&&(a-=100)}return a}padZeros(e,a){let t,i=e+"";return 1<a&&i.length<a?(t=["0","00","000"][a-2]+i,t.substr(t.length-a,a)):(t=i,t)}parseDate(e,a,t){const i=this;(void 0===t||null===t)&&(t=i.calendar),e=i.trim(e);const s=t,o=i.getParseRegExp(s,a),d=new RegExp(o.regExp).exec(e);if(null===d)return null;let n,r=o.groups,m=null,f=null,l=null,p=null,y=null,u=0,g=0,c=0,T=0,M=null,S=!1;for(let o=0,h=r.length;o<h;o++){const e=d[o+1];if(e){const a=r[o],t=a.length,d=parseInt(e,10);switch(a){case"dd":case"d":if(p=d,i.outOfRange(p,1,31))return null;break;case"MMM":case"MMMM":case"MMMMM":case"MMMMMM":case"MMMMMMM":case"MMMMMMMM":if(l=i.getMonthIndex(s,e,3===t),i.outOfRange(l,0,11))return null;break;case"M":case"MM":if(l=d-1,i.outOfRange(l,0,11))return null;break;case"y":case"yy":case"yyyy":if(f=4>t?i.expandYear(s,d):d,i.outOfRange(f,0,9999))return null;break;case"h":case"hh":if(u=d,12===u&&(u=0),i.outOfRange(u,0,11))return null;break;case"H":case"HH":if(u=d,i.outOfRange(u,0,23))return null;break;case"m":case"mm":if(g=d,i.outOfRange(g,0,59))return null;break;case"s":case"ss":if(c=d,i.outOfRange(c,0,59))return null;break;case"tt":case"t":if(S=s.PM&&(e===s.PM[0]||e===s.PM[1]||e===s.PM[2]),!S&&(!s.AM||e!==s.AM[0]&&e!==s.AM[1]&&e!==s.AM[2]))return null;break;case"f":case"ff":case"fff":if(T=d*Math.pow(10,3-t),i.outOfRange(T,0,999))return null;break;case"uu":case"nn":case"pp":case"ee":case"aa":case"xx":case"oo":if(i.outOfRange(d,0,1e3))return null;i[i._codeToUnit[a]]=d;break;case"ddd":case"dddd":if(y=i.getDayIndex(s,e,3===t),i.outOfRange(y,0,6))return null;break;case"zzz":{const a=e.split(/:/);if(2!==a.length)return null;if(n=parseInt(a[0],10),i.outOfRange(n,-12,13))return null;const t=parseInt(a[1],10);if(i.outOfRange(t,0,59))return null;M=60*n+(i.startsWith(e,"-")?-t:t);break}case"z":case"zz":if(n=d,i.outOfRange(n,-12,13))return null;M=60*n;break;case"g":case"gg":{let a=e;if(!a||!s.eras)return null;a=this.trim(a.toLowerCase());for(let e=0,t=s.eras.length;e<t;e++)if(a===s.eras[e].nathat.toLowerCase()){m=e;break}if(null===m)return null;break}default:{let a=e;1==a.length%3?a+="00":2==a.length%3&&(a+="0"),T=parseInt(a.slice(0,3),10),a=a.slice(3);for(let e=0;0<a.length;)i[i._smallUnits[e]]=parseInt(a.slice(0,3),10),a=a.slice(3),e++}}}}let h,D=new Date,H=s.convert;if(h=D.getFullYear(),null===f?f=h:s.eras&&(f+=s.eras[m||0].offset),null===l&&(l=0),null===p&&(p=1),!H){if(D.setFullYear(f,l,p),D.getDate()!==p)return null;if(null!==y&&D.getDay()!==y)return null}else if(D=H.toGregorian(f,l,p),null===D)return null;if(S&&12>u&&(u+=12),D.setHours(u,g,c,T),null!==M){const e=D.getMinutes()-(M+D.getTimezoneOffset());D.setHours(D.getHours()+parseInt(e/60,10),e%60)}return D}toString(e,a){function t(e,a){if(p)return p[a];if(void 0!==e.getMonth)switch(a){case 0:return e.getFullYear();case 1:return e.getMonth();case 2:return e.getDate();}}var i=Math.abs,s=Math.floor;const o=this;void 0===e&&(e="yyyy-MM-dd HH:mm:ss");const d=o.dateData.toString()+o.getFractionsOfSecondStamp()+e+(o.timeZone||"");if(Smart.Utilities.DateTime.cache&&Smart.Utilities.DateTime.cache[d])return Smart.Utilities.DateTime.cache[d];const n=o.toDate();if((void 0===a||null===a)&&(a=o.calendar),"string"==typeof n)return n;if(!e||!e.length||"i"===e){let e;return e=o.formatDate(n,a.patterns.F,a),e}const r=a.eras,m="s"===e;e=o.expandFormat(a,e);const f=[];let l,p,y=0,u=o.getTokenRegExp();for(;;){const d=u.lastIndex,p=u.exec(e),g=e.slice(d,p?p.index:e.length);if(y+=o.appendPreOrPostMatch(g,f),!p)break;if(y%2){f.push(p[0]);continue}const c=p[0],T=c.length;let M;if(/i{1,24}/.test(c)){f.push(o.getFirstNDigitsOfPrecision(c.length));continue}switch(c){case"ddd":case"dddd":{const e=3===T?a.days.namesAbbr:a.days.names;f.push(e[n.getDay()]);break}case"d":case"dd":f.push(o.padZeros(t(n,2),T));break;case"MMM":case"MMMM":M=t(n,1),f.push(a.months[3===T?"namesAbbr":"names"][M]);break;case"M":case"MM":f.push(o.padZeros(t(n,1)+1,T));break;case"y":case"yy":case"yyyy":M=o.getEraYear(n,a,o.getEra(n,r),m),4>T&&(M%=100),f.push(o.padZeros(M,T));break;case"h":case"hh":l=n.getHours()%12,0===l&&(l=12),f.push(o.padZeros(l,T));break;case"H":case"HH":f.push(o.padZeros(n.getHours(),T));break;case"m":case"mm":f.push(o.padZeros(n.getMinutes(),T));break;case"s":case"ss":f.push(o.padZeros(n.getSeconds(),T));break;case"t":case"tt":M=12>n.getHours()?a.AM?a.AM[0]:" ":a.PM?a.PM[0]:" ",f.push(1===T?M.charAt(0):M);break;case"f":case"ff":case"fff":f.push(o.padZeros(n.getMilliseconds(),3).substr(0,T));break;case"u":case"n":case"p":case"e":case"a":case"x":case"o":f.push(o[o._codeToUnit[c]]);break;case"uu":case"nn":case"pp":case"ee":case"aa":case"xx":case"oo":f.push(o.padZeros(o[o._codeToUnit[c]],3));break;case"z":case"zz":f.push((0<=o.timeZoneOffsetHours?"+":"-")+o.padZeros(s(i(o.timeZoneOffsetHours)),T));break;case"zzz":f.push((0<=o.timeZoneOffsetHours?"+":"-")+o.padZeros(s(i(o.timeZoneOffsetHours)),2)+":"+o.padZeros(60*i(o.timeZoneOffsetHours%1),2));break;case"g":case"gg":a.eras&&f.push(a.eras[o.getEra(n,r)].name);break;case"/":f.push(a["/"]);break;default:throw"Invalid date format pattern '"+c+"'.";}}const g=f.join("");return Smart.Utilities.DateTime.cache||(Smart.Utilities.DateTime.cache=[]),Smart.Utilities.DateTime.cache[d]=g,g}getFractionsOfSecondStamp(){const e=this;return e._microsecond.toString()+e._nanosecond+e._picosecond+e._femtosecond+e._attosecond+e._zeptosecond+e._yoctosecond}getFirstNDigitsOfPrecision(e,a){const t=this,i=""+(!0===a?"":t.padZeros(t.millisecond(),3))+t.padZeros(t._microsecond,3)+t.padZeros(t._nanosecond,3)+t.padZeros(t._picosecond,3)+t.padZeros(t._femtosecond,3)+t.padZeros(t._attosecond,3)+t.padZeros(t._zeptosecond,3)+t.padZeros(t._yoctosecond,3);return i.slice(0,e)}copySmallTimePartValues(e){const a=this;e._microsecond=a._microsecond,e._nanosecond=a._nanosecond,e._picosecond=a._picosecond,e._femtosecond=a._femtosecond,e._attosecond=a._attosecond,e._zeptosecond=a._zeptosecond,e._yoctosecond=a._yoctosecond}add(e,a,t){const i=this,s=i.internalMS();if(void 0===a){if(!1===t)return i.dateData=s+parseInt(e._ticks/i.ticksPerMillisecond),i;const a=new Smart.Utilities.DateTime(s+parseInt(e._ticks/i.ticksPerMillisecond));return i.copyTimeZone(a),i.copySmallTimePartValues(a),a}const o=e*a;if(o<=-i.maxMillis||o>=i.maxMillis)throw new Error("Out of Range");if(!1===t)return i.dateData=s+o,i;const d=new Smart.Utilities.DateTime(s+o);return i.copyTimeZone(d),i.copySmallTimePartValues(d),d}addDays(e,a){const t=this;return t.add(e,t.millisPerDay,a)}clone(){const e=this,a=new Smart.Utilities.DateTime(e.dateData);return e.copyTimeZone(a),e.copySmallTimePartValues(a),a}clearTime(){const e=this,a=e.month(),t=e.year(),i=e.day(),s=new Smart.Utilities.DateTime(t,a,i,0,0,0,0);return e.copyTimeZone(s),s}addHours(e,a){const t=this;return t.add(e,t.millisPerHour,a)}addDeciseconds(e,a){return this.add(100*e,1,a)}addCentiseconds(e,a){return this.add(10*e,1,a)}addMilliseconds(e,a){return this.add(e,1,a)}addMinutes(e,a){const t=this;return t.add(e,t.millisPerMinute,a)}addMonths(e,a){const t=this;if(-12e4>e||12e4<e)throw new Error("Invalid Months Value");let s=parseInt(t.getDatePart(t.datePartYear)),o=parseInt(t.getDatePart(t.datePartMonth)),i=parseInt(t.getDatePart(t.datePartDay));if(0==e%12)s+=e/12;else{const a=o-1+e;0<=a?(o=a%12+1,s+=a/12):(o=12+(a+1)%12,s+=(a-11)/12),s=parseInt(s)}if(1>s||9999<s)throw new Error("Year out of range");const n=t.daysInMonth(s,o);if(i>n&&(i=n),!1===a)return t.dateData=t.dateToMS(s,o,i)+t.internalMS()%t.millisPerDay,t;const r=new Smart.Utilities.DateTime(t.dateToMS(s,o,i)+t.internalMS()%t.millisPerDay);return t.copyTimeZone(r),t.copySmallTimePartValues(r),r}addSeconds(e,a){const t=this;return t.add(e,t.millisPerSecond,a)}addYears(e,a){return this.addMonths(12*e,a)}addMicroseconds(e,a){if(0===e)return;const t=this;let i,s;0>e&&0===t.hour()&&0===t.minute()&&0===t.second()&&0===t.millisecond()&&0===t._microsecond&&(i=parseInt(e/1e3,10)-1,s=1e3+e%1e3);const o=1e3*t.timeToMS(t.hour(),t.minute(),t.second(),t.millisecond())+t._microsecond,d=o+e;void 0==i&&(i=parseInt(d/1e3,10)-parseInt(o/1e3,10)),void 0===s&&(s=parseInt(d%1e3,10));let n;return 0!==i&&(n=t.addMilliseconds(i,a)),!1===a?void(t._microsecond=s):(n||(n=t.clone()),n._microsecond=s,n)}addFractionsOfSecond(e,a,t,i,s){if(0===e)return;const o=this,d=1e3*o[i]+o[t],n=e+d;let r,m=parseInt(n/1e3,10)-parseInt(d/1e3,10),f=parseInt(n%1e3,10);return 0>e&&0>n&&0>f&&(m--,f=1e3+f),0!=m&&(r=o[s](m,a)),!1===a?void(o[t]=f):(r||(r=o.clone()),r[t]=f,r)}addNanoseconds(e,a){return this.addFractionsOfSecond(e,a,"_nanosecond","_microsecond","addMicroseconds")}addPicoseconds(e,a){return this.addFractionsOfSecond(e,a,"_picosecond","_nanosecond","addNanoseconds")}addFemtoseconds(e,a){return this.addFractionsOfSecond(e,a,"_femtosecond","_picosecond","addPicoseconds")}addAttoseconds(e,a){return this.addFractionsOfSecond(e,a,"_attosecond","_femtosecond","addFemtoseconds")}addZeptoseconds(e,a){return this.addFractionsOfSecond(e,a,"_zeptosecond","_attosecond","addAttoseconds")}addYoctoseconds(e,a){return this.addFractionsOfSecond(e,a,"_yoctosecond","_zeptosecond","addZeptoseconds")}getTimeZoneOffset(){const e=new Date,a=new Date(e.getFullYear(),0,1),t=new Date(e.getFullYear(),6,1),i=e.getTimezoneOffset()<Math.max(a.getTimezoneOffset(),t.getTimezoneOffset());return{offset:-(e.getTimezoneOffset()/60),dst:+i}}isInDaylightSavingTime(){const e=new Date,a=new Date(e.getFullYear(),0,1),t=new Date(e.getFullYear(),6,1);return this.date().getTimezoneOffset()<Math.max(a.getTimezoneOffset(),t.getTimezoneOffset())}supportsDaylightSavingTime(){const e=new Date,a=new Date(e.getFullYear(),0,1),t=new Date(e.getFullYear(),6,1);return a.getTimezoneOffset()!==t.getTimezoneOffset()}date(){const e=this,a=e.month(),t=e.year(),i=e.day(),s=new Smart.Utilities.DateTime(t,a,i);return e.copyTimeZone(s),s}isWeekend(){const e=this;return 0===e.dayOfWeek()||6===e.dayOfWeek()}toDate(e){const a=this,t=a.month(),i=a.year(),s=a.day(),o=a.hour(),d=a.minute(),n=a.second(),r=a.millisecond();let m=new Date(i,t-1,s);if(1970>i&&m.setFullYear(i),m.setHours(o,d,n,r),e){const t=a.timeZones.filter(function(a){return a.id===e});if(t.length){let e=t[0].offset;const i=m.getTime();let s=1e3*(60*m.getTimezoneOffset());if(a.timeZone){const e=a.timeZones.filter(function(e){return e.id===a.timeZone});e.length&&(s=1e3*(60*-e[0].offset))}const o=i+s;m=new Date(o+60000*e)}}return m}toTimeZone(e){const a=this;let t=e;if((null===t||void 0===t)&&(t="Local"),a.timeZone===t)return a.clone();const i=a.timeZones.filter(function(e){return e.id===t});if(0===i.length)return a.clone();const s=this.toDate(t),o=new Smart.Utilities.DateTime(s);return o.timeZone=t,o.timeZoneOffset=i[0].offset,o.timeZoneOffsetHours=i[0].offsetHours,a.copySmallTimePartValues(o),o}day(){const e=this;return e.getDatePart(e.datePartDay)}month(){const e=this;return e.getDatePart(e.datePartMonth)}year(){const e=this;return e.getDatePart(e.datePartYear)}millisecond(){return parseInt(this.internalMS()%1e3)}hour(){const e=this;return parseInt(Math.floor(e.internalMS()/e.millisPerHour)%24)}minute(){const e=this;return parseInt(e.internalMS()/e.millisPerMinute%60)}second(){const e=this;return parseInt(e.internalMS()/e.millisPerSecond%60)}microsecond(){return this._microsecond}nanosecond(){return this._nanosecond}picosecond(){return this._picosecond}femtosecond(){return this._femtosecond}attosecond(){return this._attosecond}zeptosecond(){return this._zeptosecond}yoctosecond(){return this._yoctosecond}valueOf(){return this.dateData}equals(e){const a=this;return a.dateData===e.dateData&&a._microsecond===e._microsecond&&a._nanosecond===e._nanosecond&&a._picosecond===e._picosecond&&a._femtosecond===e._femtosecond&&a._attosecond===e._attosecond&&a._zeptosecond===e._zeptosecond&&a._yoctosecond===e._yoctosecond}equalDateParts(e){const a=this;return!(a.year()!==e.year()||a.month()!==e.month()||a.day()!==e.day())}compare(e){const a=this;if(a.equals(e))return 0;const t=["dateData","_microsecond","_nanosecond","_picosecond","_femtosecond","_attosecond","_zeptosecond","_yoctosecond"];for(let s=0;s<t.length;s++){const i=t[s];if(a[i]>e[i])return 1;if(a[i]<e[i])return-1}return 0}toDateString(){return this.toDate().toDateString()}toLocaleDateString(){const e=this;return e.toDate().toLocaleDateString(e.calendar.locale)}toLocaleString(){const e=this;return e.toDate().toLocaleString(e.calendar.locale)}toLocaleTimeString(){const e=this;return e.toDate().toLocaleTimeString(e.calendar.locale)}validateTimeZone(e){const a=this;if("string"==typeof e){const t=a.timeZones.filter(function(a){return a.id===e});0===t.length||(a.timeZone=e,a.timeZoneOffset=t[0].offset,a.timeZoneOffsetHours=t[0].offsetHours)}}copyTimeZone(e){const a=this;e.timeZone=a.timeZone,e.timeZoneOffset=a.timeZoneOffset,e.timeZoneOffsetHours=a.timeZoneOffsetHours}getTimeStamp(){const e=this,a=new Smart.Utilities.BigNumber(e.dateData.toString()+e.getFirstNDigitsOfPrecision(void 0,!0));return a}});