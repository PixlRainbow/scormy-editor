
/* Smart HTML Elements v4.6.0 (2019-Oct) 
Copyright (c) 2011-2019 jQWidgets. 
License: https://htmlelements.com/license/ */

Smart.Utilities.Assign("Grid.Resize",class{autoSizeRows(a){const b=this,c=a?a:b._recyclingRows;b.rows.canNotify=!1;for(let d=0;d<c.length;d++){const a=c[d];a.element=b._rowElements[1],a.grid=b;const e=a._autoSize(a);a.cellHeight!==e&&(a.cellHeight=e),a.height=e}b.rows.canNotify=!0,b.refresh()}autoSizeColumns(a,b){const c=this,d=b?b:c.columns;let e=[];if(!a){const a=c._recyclingRows;for(let b=0;b<a.length;b++){const c=a[b];for(let a=0;a<d.length;a++){const b=d[a],f=c.getCell(b.dataField);e[b.dataField]||(e[b.dataField]=b.label),f.value&&f.value.toString().length>e[b.dataField].length&&(e[b.dataField]=f.value)}}}const f=[];for(let c=0;c<d.length;c++){const a=d[c],b=e[a.dataField]?e[a.dataField]:a.label;f.push(b)}const g=d[0]._measureSize(f);c.columns.canNotify=!1;for(let c=0;c<d.length;c++){const a=d[c];a.width=g[c]}c.columns.canNotify=!0,c.refresh()}_doubleClickHandler(a){const b=this;if("none"!==b.behavior.rowResizeMode||"none"!==b.behavior.columnResizeMode){const c=!!b._downTime&&300>new Date-b._downTime;if(c){const c=(b.enableShadowDOM?b.shadowRoot:b.getRootNode()).elementsFromPoint(a.clientX,a.clientY);let d=null,e=null,f=null,g=null;for(let a=0;a<c.length;a++){const b=c[a];if(b.getAttribute("data-field")){d=b.getAttribute("data-field"),e=b;break}if(b.getAttribute("data-id")){f=b.getAttribute("data-id"),g=b;break}}const h=b.columnByDataField[d],i=b.rowById[f];if(b.appearance.allowColumnAutoSizeOnDoubleClick&&h&&h.allowResize&&"none"!==b.behavior.columnResizeMode){const b=e.getBoundingClientRect().right;b-10<=a.clientX&&a.clientX<=b+10&&h.autoSize()}if(b.appearance.allowRowAutoSizeOnDoubleClick&&i&&i.allowResize&&"none"!==b.behavior.rowResizeMode){const b=g.getBoundingClientRect().bottom;b-10<=a.clientY&&a.clientY<=b+10&&(i.computedHeight=null,i.autoSize())}}b._downTime=new Date}}_endResize(){const a=this;a._overlay&&(a._overlay.parentNode.removeChild(a._overlay),a._overlay=null);const b=a.getBoundingRect(a);if(a.classList.remove("smart-grid-resize-mode"),a.$.root.classList.remove("smart-grid-resize-mode"),a.classList.remove("smart-grid-row-resize-mode"),a.classList.remove("smart-grid-column-resize-mode"),a._rowToResize&&a._rowResizeStartLine&&a._rowResizeLine){const b=a.rowById[a._rowToResizeId],c=b.cellHeight+parseFloat(a._rowResizeLine.style.top)-parseFloat(a._rowResizeStartLine.style.top);if(a.rows.canNotify=!1,b.height=null,"split"===a.behavior.rowResizeMode){const d=a._nextRow(b),e=parseInt(b.height-c+b.cellHeight);b.computedHeight=c,d.computedHeight=parseInt(d.height)+e,d.height=null}else b.computedHeight=c;return a.rows.canNotify=!0,a._rowResizeStartLine.parentNode.removeChild(a._rowResizeStartLine),a._rowResizeLine.parentNode.removeChild(a._rowResizeLine),a.appearance.showResizeTooltips&&a._rowResizeTooltip.parentNode.removeChild(a._rowResizeTooltip),a._rowToResize.header&&(a._rowToResize.header.style.cursor=""),a._rowResizeLine=null,a._rowToResize=null,a._rowToResizeId=null,void a.refresh()}if(!a._columnToResizeElement||!a._columnResizeLine)return;const c=a.columnByDataField[a._columnToResizeDataField],d=a._columnToResizeRect,e=b.left+parseInt(a._columnResizeLine.style.left)-d.left+a.scrollLeft;if(a.columns.canNotify=!1,"split"===a.behavior.columnResizeMode){const b=a._nextColumn(c),d=parseInt(c.computedWidth-e);c.width=e,b.width=parseInt(b.computedWidth)+d}else c.width=e;a.columns.canNotify=!0,a._columnResizeLine.parentNode.removeChild(a._columnResizeLine),a._columnResizeLine=null,a._columnResizeStartLine.parentNode.removeChild(a._columnResizeStartLine),a._columnResizeTooltip.parentNode&&a._columnResizeTooltip.parentNode.removeChild(a._columnResizeTooltip),a._columnResizeStartLine=null,a._columnToResizeElement.style.cursor="",a._columnToResizeElement.sortButton.style.cursor="",a._columnToResizeElement.filterButton.style.cursor="",a._columnToResizeElement=null,a._columnToResizeRect=null,a._columnToResizeDataField=null,a._columnResizeTooltip=null,a.refresh()}_columnDownResizeHandler(){const a=this,b=a._columnToResizeRect,c=a.getBoundingRect(a.$.columnHeader),d=function(){const a=document.createElement("div");return a.classList.add("smart-grid-resize-line"),a.style.left=-c.left+b.right+"px",a.style.top=-c.top+b.top+"px",a.style.height="calc(100% - "+a.style.top+")",a.style.cursor="col-resize",a},e=document.createElement("div");e.classList.add("smart-grid-resize-tooltip"),a._columnResizeTooltip=e,a._columnResizeTooltip.style.left=-c.left+b.right+"px",a._columnResizeTooltip.innerHTML=a.localize("columnResizeTooltip",{value:b.width}),a._columnResizeLine=d(),a._columnResizeStartLine=d(),"growAndShrink"===a.behavior.columnResizeMode&&(a.classList.add("smart-grid-resize-mode"),a.classList.add("smart-grid-column-resize-mode"),a.$.root.classList.add("smart-grid-resize-mode")),a.appearance.showResizeTooltips&&a.$.root.appendChild(a._columnResizeTooltip),a.$.root.appendChild(a._columnResizeLine),a.$.root.appendChild(a._columnResizeStartLine),a._overlay=document.createElement("div"),a._overlay.classList.add("smart-grid-overlay"),a._overlay.style.cursor="col-resize",a.$.root.appendChild(a._overlay)}_columnMoveResizeHandler(a){const b=this,c=5,d=function(a){const c=b._columnToResizeRect,d=a.left+parseFloat(b._columnResizeLine.style.left)-c.left+b.scrollLeft;b.appearance.showResizeTooltips&&(b._columnResizeTooltip.innerHTML=b.localize("columnResizeTooltip",{value:parseInt(d)}))};if(b._columnResizeLine){const c=b.columnByDataField[b._columnToResizeDataField],e=b._columnToResizeRect,f=c.minWidth,g=c.maxWidth,h=b._nextColumn(c),i=b.getBoundingRect(b);if(a.pageX<i.left)return;if("split"===b.behavior.columnResizeMode&&h&&a.pageX>=i.left+h.left+h.width-h.minWidth-b.scrollLeft)return b._columnResizeLine.style.left=-i.left+i.left+h.width+h.left-h.minWidth-b.scrollLeft+"px",void d(i);if(e.left+f-b.scrollLeft>=a.pageX)return b._columnResizeLine.style.left=-i.left+e.left+f-b.scrollLeft+"px",void d(i);if(e.left+g-b.scrollLeft<=a.pageX)return b._columnResizeLine.style.left=-i.left+e.left+g-b.scrollLeft+"px",void d(i);b._columnResizeLine.style.left=-i.left+a.pageX+"px",d(i)}else{const b=this,d=(b.enableShadowDOM?b.shadowRoot:b.getRootNode()).elementsFromPoint(a.clientX,a.clientY);let e=null,f=null;if(b._columnResizeLine)return;for(let a=0;a<d.length;a++){const b=d[a];if(b.hasAttribute("data-field")&&b.hasAttribute("header")){e=b.getAttribute("data-field"),f=b;break}}if(b._columnToResizeElement&&(b._columnToResizeElement.style.cursor="",b._columnToResizeElement.sortButton.style.cursor="",b._columnToResizeElement.filterButton.style.cursor="",b._columnToResizeElement=null),e){const d=f.getBoundingClientRect().right;if(f.style.cursor="",f.sortButton.style.cursor="",f.filterButton.style.cursor="",d-c<=a.clientX&&a.clientX<=d+c){const a=b.columnByDataField[e];if(!a||a&&!a.allowResize)return;const c=b._isLastVisibleColumn(a);if("split"===b.behavior.columnResizeMode&&c)return;f.style.cursor="col-resize",f.sortButton.style.cursor="col-resize",f.filterButton.style.cursor="col-resize",b._columnToResizeRect=b.getBoundingRect(f),b._columnToResizeElement=f,b._columnToResizeDataField=e}}}}_rowMoveResizeHandler(a){const b=this,c=(b.enableShadowDOM?b.shadowRoot:b.getRootNode()).elementsFromPoint(a.clientX,a.clientY),d=5;let e=null,f=null;if(b._rowResizeLine){const c=b._offsetTop(b.$.scrollView),e={top:c,bottom:b.$.scrollView.offsetHeight+c};if(a.pageY<=e.top)return;if(a.pageY>=e.bottom)return;const f=function(){const a=g.cellHeight+parseFloat(b._rowResizeLine.style.top)-parseFloat(b._rowResizeStartLine.style.top);b.appearance.showResizeTooltips&&(b._rowResizeTooltip.innerHTML=b.localize("rowResizeTooltip",{value:parseInt(a)}))},g=b.rowById[b._rowToResizeId],h=b._nextRow(g),i=b._rowToResizeBounds,j=g.minHeight,k=g.maxHeight;return"split"===b.behavior.rowResizeMode&&h&&i.bottom+h.height-h.minHeight<=a.pageY?(b._rowResizeLine.style.top=i.bottom+h.height-h.minHeight-c+"px",void f()):i.top+j+d>=a.pageY?(b._rowResizeLine.style.top=i.top+j+d-c+"px",void f()):i.top+k>=a.pageY-c?(b._rowResizeLine.style.top=i.top+k+d-c+"px",void f()):(b._rowResizeLine.style.top=-c+a.pageY-1+"px",void f())}for(let b=0;b<c.length;b++){const a=c[b];if(a.hasAttribute("data-id")&&a.hasAttribute("header")){f=a,e=a.getAttribute("data-id");break}}if(b._rowToResize&&(b._rowToResize.style.cursor="",b._rowToResize=null),null!==e){const c=b._offsetTop(f)+f.offsetHeight;if(f.style.cursor="",c-d<=a.clientY&&a.clientY<=c+d){const a=b.rowById[e];if(!a||a&&!a.allowResize)return;a.header&&(a.header.style.cursor="row-resize");const c=b._offsetTop(f);b._rowToResizeBounds={top:c,bottom:f.offsetHeight+c,height:f.offsetHeight},b._rowToResize=f,b._rowToResizeId=e}}}_rowDownResizeHandler(){const a=this,b=a._rowToResizeBounds,c=function(){const c=document.createElement("div");return c.classList.add("smart-grid-resize-line","row"),c.style.width=a.$.scrollView.offsetWidth-a._rowToResize.offsetLeft+"px",c.style.left="0px",c.style.top=-a._offsetTop(a.$.scrollView)+b.bottom+"px",c.style.cursor="row-resize",c},d=document.createElement("div");d.classList.add("smart-grid-resize-tooltip"),a._rowResizeTooltip=d,a._rowResizeTooltip.style.top=-a._offsetTop(a.$.scrollView)+b.bottom+"px",a._rowResizeTooltip.innerHTML=a.localize("rowResizeTooltip",{value:b.height}),a._rowResizeTooltip.style.right="20px",a._rowResizeTooltip.style.bottom="initial","growAndShrink"===a.behavior.rowResizeMode&&(a.classList.add("smart-grid-resize-mode"),a.classList.add("smart-grid-row-resize-mode"),a.$.root.classList.add("smart-grid-resize-mode")),a._rowResizeLine=c(),a._rowResizeStartLine=c(),a._overlay=document.createElement("div"),a._overlay.classList.add("smart-grid-overlay"),a._overlay.style.cursor="row-resize",a.$.root.appendChild(a._overlay),a.$.scrollView.appendChild(a._rowResizeLine),a.$.scrollView.appendChild(a._rowResizeStartLine),a.appearance.showResizeTooltips&&a.$.scrollView.appendChild(a._rowResizeTooltip)}_rowResizeHandler(a){const b=this;let c=a.clientX,d=a.clientY;(c===void 0||d===void 0)&&(c=a.touches[0].clientX,d=a.touches[0].clientY);const e=(b.enableShadowDOM?b.shadowRoot:b.getRootNode()).elementsFromPoint(c,d);let f=null;for(let b=0;b<e.length;b++){const a=e[b];a.getAttribute("data-id")&&(f=a.getAttribute("data-id"))}if(null!==f&&b._rowToResize&&!b._rowResizeLine)return void b._rowDownResizeHandler(a)}});